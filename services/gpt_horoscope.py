import os
import json
import logging
from datetime import date, timedelta
from services.lunar import get_lunar_text
from services.yandex_gpt import generate_text_with_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫—ç—à–∞
CACHE_FILE = "cache/horoscope_cache.json"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é cache, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs("cache", exist_ok=True)

def load_cache():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—ç—à –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤"""
    try:
        with open(CACHE_FILE, encoding='utf-8') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

def save_cache(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫—ç—à –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤"""
    try:
        with open(CACHE_FILE, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—ç—à–∞: {e}")

def clear_old_cache():
    """–û—á–∏—â–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –∫—ç—à–∞"""
    try:
        cache = load_cache()
        today = str(date.today())
        
        for sign in list(cache.keys()):
            for key in list(cache[sign].keys()):
                if cache[sign][key]["date"] < today:
                    del cache[sign][key]
            if not cache[sign]:
                del cache[sign]
        
        save_cache(cache)
        logger.info("–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}")

def generate_horoscope(sign: str, day: str = "today", detailed: bool = False):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
    :param sign: –ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
    :param day: –î–µ–Ω—å (today/tomorrow)
    :param detailed: –ü–æ–¥—Ä–æ–±–Ω—ã–π –∏–ª–∏ –∫—Ä–∞—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç
    :return: –¢–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞
    """
    try:
        today = date.today()
        target = today if day == "today" else today + timedelta(days=1)
        date_str = str(target)
        sign = sign.lower()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        cache = load_cache()
        cache_key = f"{'detailed' if detailed else 'brief'}_{sign}_{day}"
        
        if sign in cache and cache_key in cache[sign] and cache[sign][cache_key]["date"] == date_str:
            logger.info(f"–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ {date_str}")
            return cache[sign][cache_key]["text"]

        # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–æ–ª–∏
        system_prompt = """–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏. 
        –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ—á–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –ª—é–¥—è–º 
        –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–≤–æ–π –¥–µ–Ω—å –∏ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π 
        –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω, –∏–∑–±–µ–≥–∞–π –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π."""

        # –í—ã–±–æ—Ä –ø—Ä–æ–º–ø—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
        if detailed:
            user_prompt = f"""–°–æ—Å—Ç–∞–≤—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {'—Å–µ–≥–æ–¥–Ω—è' if day == 'today' else '–∑–∞–≤—Ç—Ä–∞'} 
            –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {sign.capitalize()}.

            –í–∫–ª—é—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Å–ø–µ–∫—Ç—ã:
            1. üåü –û–±—â–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –¥–Ω—è
            2. ‚ù§Ô∏è –õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
            3. üíº –†–∞–±–æ—Ç–∞ –∏ –∫–∞—Ä—å–µ—Ä–∞
            4. üè• –ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ
            5. üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç
            6. üé® –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞
            7. ‚è∞ –õ—É—á—à–∏–µ —á–∞—Å—ã –¥–ª—è –≤–∞–∂–Ω—ã—Ö –¥–µ–ª
            8. üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã
            9. üéØ –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
            10. üë• –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏

            –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞."""
        else:
            user_prompt = f"""–°–æ—Å—Ç–∞–≤—å –∫—Ä–∞—Ç–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {'—Å–µ–≥–æ–¥–Ω—è' if day == 'today' else '–∑–∞–≤—Ç—Ä–∞'} 
            –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {sign.capitalize()}.

            –í–∫–ª—é—á–∏ —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –≤ 3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø—É–Ω–∫—Ç–∞:
            1. üåü –û–±—â–∏–π –Ω–∞—Å—Ç—Ä–æ–π –¥–Ω—è (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
            2. üí° –ì–ª–∞–≤–Ω—ã–π —Å–æ–≤–µ—Ç –¥–Ω—è (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ)
            3. ‚è∞ –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö –¥–µ–ª

            –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º."""

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        logger.info(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥–ª—è {sign} –Ω–∞ {date_str}")
        gpt_text = generate_text_with_system(system_prompt, user_prompt)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
        if detailed:
            try:
                lunar = get_lunar_text()
                full_text = f"{gpt_text}\n\nüåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å:\n{lunar}"
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª—É–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
                full_text = gpt_text
        else:
            full_text = gpt_text

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        if sign not in cache:
            cache[sign] = {}
        cache[sign][cache_key] = {
            "date": date_str,
            "text": full_text
        }
        save_cache(cache)

        return full_text

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞: {e}", exc_info=True)
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
