import os
import json
from datetime import date, timedelta
from services.lunar import get_lunar_text
from services.yandex_gpt import generate_text_with_system

CACHE_FILE = "cache/horoscope_cache.json"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é cache, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs("cache", exist_ok=True)

def load_cache():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—ç—à –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤"""
    try:
        with open(CACHE_FILE, encoding='utf-8') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

def save_cache(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫—ç—à –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤"""
    try:
        with open(CACHE_FILE, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—ç—à–∞: {e}")

def generate_horoscope(sign: str, day: str = "today"):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
    :param sign: –ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
    :param day: –î–µ–Ω—å (today/tomorrow)
    :return: –¢–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞
    """
    from dotenv import load_dotenv
    load_dotenv()

    today = date.today()
    target = today if day == "today" else today + timedelta(days=1)
    date_str = str(target)
    sign = sign.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    cache = load_cache()
    if sign in cache and day in cache[sign] and cache[sign][day]["date"] == date_str:
        return cache[sign][day]["text"]

    # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–æ–ª–∏
    system_prompt = """–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏. 
    –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ—á–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –ª—é–¥—è–º 
    –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–≤–æ–π –¥–µ–Ω—å –∏ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π 
    –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω, –∏–∑–±–µ–≥–∞–π –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π."""

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç
    user_prompt = f"""–°–æ—Å—Ç–∞–≤—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {'—Å–µ–≥–æ–¥–Ω—è' if day == 'today' else '–∑–∞–≤—Ç—Ä–∞'} 
    –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {sign.capitalize()}.

    –í–∫–ª—é—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Å–ø–µ–∫—Ç—ã:
    1. –û–±—â–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –¥–Ω—è
    2. –õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
    3. –†–∞–±–æ—Ç–∞ –∏ –∫–∞—Ä—å–µ—Ä–∞
    4. –ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ
    5. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å
    6. –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞
    7. –õ—É—á—à–∏–µ —á–∞—Å—ã –¥–ª—è –≤–∞–∂–Ω—ã—Ö –¥–µ–ª

    –§–æ—Ä–º–∞—Ç: —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞."""

    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        gpt_text = generate_text_with_system(system_prompt, user_prompt)
        
        # –ü–æ–ª—É—á–∞–µ–º –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        try:
            lunar = get_lunar_text()
            full_text = f"{gpt_text}\n\nüåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å:\n{lunar}"
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª—É–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
            full_text = gpt_text

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        if sign not in cache:
            cache[sign] = {}
        cache[sign][day] = {"date": date_str, "text": full_text}
        save_cache(cache)

        return full_text

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞: {e}")
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."