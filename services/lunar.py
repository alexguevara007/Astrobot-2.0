import ephem
import logging
from datetime import datetime
import pytz

logger = logging.getLogger(__name__)

def get_lunar_text() -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–∑–µ –ª—É–Ω—ã"""
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ª—É–Ω—ã
        moon = ephem.Moon()
        
        # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        now = ephem.now()
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Ñ–∞–∑—É –ª—É–Ω—ã
        moon.compute(now)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∑—É –∫–∞–∫ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1
        phase = moon.phase / 100.0
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–∑—É –ª—É–Ω—ã –∏ —ç–º–æ–¥–∑–∏
        if 0 <= phase < 0.05 or phase > 0.95:
            phase_name = "–ù–æ–≤–æ–ª—É–Ω–∏–µ"
            emoji = "üåë"
        elif 0.05 <= phase < 0.25:
            phase_name = "–†–∞—Å—Ç—É—â–∏–π –º–µ—Å—è—Ü"
            emoji = "üåí"
        elif 0.25 <= phase < 0.35:
            phase_name = "–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å"
            emoji = "üåì"
        elif 0.35 <= phase < 0.45:
            phase_name = "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞"
            emoji = "üåî"
        elif 0.45 <= phase < 0.55:
            phase_name = "–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ"
            emoji = "üåï"
        elif 0.55 <= phase < 0.65:
            phase_name = "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞"
            emoji = "üåñ"
        elif 0.65 <= phase < 0.75:
            phase_name = "–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å"
            emoji = "üåó"
        else:
            phase_name = "–£–±—ã–≤–∞—é—â–∏–π –º–µ—Å—è—Ü"
            emoji = "üåò"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—Ç—É—â–∞—è/—É–±—ã–≤–∞—é—â–∞—è
        is_growing = phase < 0.5
        
        # –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
        moon_sign = ephem.constellation(moon)[1]
        zodiac_map = {
            'Aries': '‚ôàÔ∏è –û–≤–µ–Ω',
            'Taurus': '‚ôâÔ∏è –¢–µ–ª–µ—Ü',
            'Gemini': '‚ôäÔ∏è –ë–ª–∏–∑–Ω–µ—Ü—ã',
            'Cancer': '‚ôãÔ∏è –†–∞–∫',
            'Leo': '‚ôåÔ∏è –õ–µ–≤',
            'Virgo': '‚ôçÔ∏è –î–µ–≤–∞',
            'Libra': '‚ôéÔ∏è –í–µ—Å—ã',
            'Scorpius': '‚ôèÔ∏è –°–∫–æ—Ä–ø–∏–æ–Ω',
            'Sagittarius': '‚ôêÔ∏è –°—Ç—Ä–µ–ª–µ—Ü',
            'Capricornus': '‚ôëÔ∏è –ö–æ–∑–µ—Ä–æ–≥',
            'Aquarius': '‚ôíÔ∏è –í–æ–¥–æ–ª–µ–π',
            'Pisces': '‚ôìÔ∏è –†—ã–±—ã'
        }
        moon_zodiac = zodiac_map.get(moon_sign, moon_sign)
        
        # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–°–ö
        moscow_time = datetime.now(pytz.timezone('Europe/Moscow')).strftime("%d.%m.%Y %H:%M")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        return (
            f"{emoji} –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å\n\n"
            f"–§–∞–∑–∞: {phase_name}\n"
            f"–û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å: {moon.phase:.1f}%\n"
            f"–õ—É–Ω–∞ –≤ –∑–Ω–∞–∫–µ: {moon_zodiac}\n"
            f"–õ—É–Ω–∞ {'—Ä–∞—Å—Ç—É—â–∞—è' if is_growing else '—É–±—ã–≤–∞—é—â–∞—è'}\n"
            f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {int(moon.earth_distance * 149597870.7):,} –∫–º\n\n"
            f"–í—Ä–µ–º—è: {moscow_time} (–ú–°–ö)"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ª—É–Ω–µ: {e}")
        return "‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ª—É–Ω–µ"

if __name__ == "__main__":
    print(get_lunar_text())
