import os
import json
from datetime import date
import logging

logger = logging.getLogger(__name__)

CACHE_FILE = "cache/horoscope_cache.json"

def load_cache() -> dict:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∫—ç—à–∞"""
    try:
        if os.path.exists(CACHE_FILE):
            with open(CACHE_FILE, encoding="utf-8") as f:
                return json.load(f)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞: {e}")
    return {}

def save_cache(data: dict):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à-—Ñ–∞–π–ª"""
    try:
        os.makedirs(os.path.dirname(CACHE_FILE), exist_ok=True)
        with open(CACHE_FILE, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        logger.info("‚úÖ –ö—ç—à —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞: {e}")

def get_cache_key(sign: str, lang: str = 'ru') -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª—é—á –∫—ç—à–∞ –ø–æ –∑–Ω–∞–∫—É –∏ —è–∑—ã–∫—É"""
    return f"brief_{sign.lower()}_today_{lang}"

def save_horoscope_to_cache(sign: str, text: str, lang: str = 'ru'):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ –∫—ç—à –ø–æ –∑–Ω–∞–∫—É –∏ —è–∑—ã–∫—É
    """
    try:
        today = str(date.today())
        sign_lower = sign.lower()
        key = get_cache_key(sign, lang)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
        cache = load_cache()
        if sign_lower not in cache:
            cache[sign_lower] = {}

        cache[sign_lower][key] = {
            "date": today,
            "text": text
        }

        save_cache(cache)
        logger.info(f"üíæ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è '{sign_lower}' ({lang}) –Ω–∞ {today} —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –∫—ç—à.")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –∫—ç—à: {e}")

def clear_old_cache():
    """
    –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ª–∏—á–Ω—ã–µ –æ—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã
    """
    try:
        today = str(date.today())
        cache = load_cache()
        cleaned = {}

        for sign, entries in cache.items():
            fresh_entries = {
                key: value for key, value in entries.items()
                if value.get("date") == today
            }
            if fresh_entries:
                cleaned[sign] = fresh_entries

        save_cache(cleaned)
        logger.info("üßπ –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏ –∫—ç—à–∞ —É–¥–∞–ª–µ–Ω—ã.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}")
