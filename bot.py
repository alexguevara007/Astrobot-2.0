# –ò–∑–º–µ–Ω–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook_handler:
async def webhook_handler(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram"""
    try:
        update = await request.json()
        logger.info("\n=================–ù–û–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï=================")
        logger.info(f"RAW UPDATE: {update}")

        if 'message' in update:
            message = update['message']
            chat_id = message.get('chat', {}).get('id')
            text = message.get('text', '')
            
            logger.info(f"""
            –î–µ—Ç–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:
            Chat ID: {chat_id}
            –¢–µ–∫—Å—Ç: {text}
            –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞: {text.startswith('/')}
            """)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                if text == '/start':
                    await test_start(Update.de_json(update, application.bot), None)
                elif text == '/tarot':
                    await test_tarot(Update.de_json(update, application.bot), None)
                else:
                    await application.bot.send_message(
                        chat_id=chat_id,
                        text=f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {text}"
                    )
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã {text}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã {text}: {e}")
                logger.exception("–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º
        try:
            await application.process_update(Update.de_json(update, application.bot))
            logger.info("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ update: {e}")
            logger.exception("–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:")
        
        return web.Response()
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        logger.exception("–ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏:")
        return web.Response(status=500)

# –ò–∑–º–µ–Ω–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:
async def test_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        user_id = update.effective_user.id if update.effective_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        logger.info(f"–í—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        
        await update.message.reply_text(
            "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AstroBot!\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/tarot - –†–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ"
        )
        logger.info("–û—Ç–≤–µ—Ç –Ω–∞ /start –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ test_start: {e}")
        logger.exception("–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:")
        if update and update.message:
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

async def test_tarot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tarot"""
    try:
        user_id = update.effective_user.id if update.effective_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        logger.info(f"–í—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /tarot –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        
        await update.message.reply_text(
            "üé¥ –†–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ\n\n"
            "–ò–¥–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–∞—Å–∫–ª–∞–¥–∞...\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
        )
        logger.info("–û—Ç–≤–µ—Ç –Ω–∞ /tarot –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ test_tarot: {e}")
        logger.exception("–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:")
        if update and update.message:
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
