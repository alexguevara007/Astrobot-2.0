"""
AstroBot ‚Äî Telegram –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞–º, –¢–∞—Ä–æ –∏ –õ—É–Ω–µ üåô
"""

import os
import logging
from dotenv import load_dotenv
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, ContextTypes, Defaults, filters
)
from telegram.constants import ParseMode
from telegram.error import TelegramError

from handlers.menu import start, button_handler, reply_command_handler
from handlers.horoscope import horoscope_today, horoscope_tomorrow
from handlers.subscribe import subscribe, unsubscribe, subscription_status
from handlers.moon import moon
from handlers.tarot import tarot, tarot3
from handlers.tarot5 import tarot5
from handlers.compatibility import compatibility
from services.database import init_db
from scheduler import setup_scheduler


# === üîê –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ ===
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    logging.critical("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
    raise SystemExit("BOT_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –í—ã—Ö–æ–¥.")


# === üìù –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logging.basicConfig(
    format="%(asctime)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)


# === ‚õë –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ ===
async def error_handler(update, context: ContextTypes.DEFAULT_TYPE):
    logger.error("‚ùå –û—à–∏–±–∫–∞: %s", context.error, exc_info=True)
    try:
        if update and update.effective_message:
            await update.effective_message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception:
        logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.")


# === main ===
def main():
    # üìÇ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    init_db()

    # ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (HTML)
    defaults = Defaults(parse_mode=ParseMode.HTML)

    # ü§ñ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = ApplicationBuilder().token(BOT_TOKEN).defaults(defaults).build()

    # === üìå –ö–æ–º–∞–Ω–¥—ã ===
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("menu", start))
    app.add_handler(CommandHandler("help", start))

    app.add_handler(CommandHandler("subscribe", subscribe))
    app.add_handler(CommandHandler("unsubscribe", unsubscribe))
    app.add_handler(CommandHandler("status", subscription_status))

    app.add_handler(CommandHandler("horoscope", horoscope_today))
    app.add_handler(CommandHandler("tomorrow", horoscope_tomorrow))
    app.add_handler(CommandHandler("moon", moon))

    app.add_handler(CommandHandler("tarot", tarot))
    app.add_handler(CommandHandler("tarot3", tarot3))
    app.add_handler(CommandHandler("tarot5", tarot5))
    app.add_handler(CommandHandler("compatibility", compatibility))

    # ‚úÖ Callback –∫–Ω–æ–ø–∫–∏
    app.add_handler(CallbackQueryHandler(button_handler))

    # ‚úÖ –¢–µ–∫—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (Reply-–∫–Ω–æ–ø–∫–∏)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, reply_command_handler))

    # üõë –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    app.add_error_handler(error_handler)

    # ‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    setup_scheduler(app)

    # ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
    logger.info("üöÄ AstroBot —Å—Ç–∞—Ä—Ç—É–µ—Ç...")
    print("ü§ñ AstroBot –∑–∞–ø—É—â–µ–Ω. Polling –Ω–∞—á–∞—Ç.")
    app.run_polling()


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    main()